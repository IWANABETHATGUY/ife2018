<template>
  <ul class="san-recursive-list {{class}} {{active}}">
    <li s-for="item, index in list"  
    on-click="handleClick($event, item)" 
    class="san-recursive-item {{index === ind ? 'active' : ''}} {{item.children.length ? 'more' : ''}}">
      <span style="line-height: 24px;">{{item.label}}</span>
      <recusive-item
      class="position"
      active="{{index === ind ? 'open' : ''}}"
      s-if="{{item.children.length && index === ind}}"
      list="{{item.children}}"
      on-finish-select="handleFinishSelect($event, item)"
      ></recusive-item>
    </li>
  </ul>
</template>
<script>
export default {
  components: {
    'recusive-item': 'self'
  },
  initData() {
    return {
      list: null,
      class: '',
      ind: -1,
      active: '',
      result: []
    }
  },
  handleClick(e, item) {
    e.stopPropagation();
    this.data.set('result', [item.label]);
    let target = e.target;
    if (target.tagName !== 'LI') {
      target = target.parentNode;
    }
    let siblings = Array.from(target.parentNode.children);
    let index = -1;
    siblings.some((it, ind) => {
      if (it.innerText === item.label) {
        index = ind;
        return true;
      }
      return false;
    });
    this.data.set('ind', index);
    if (!item.children || !item.children.length) {
      this.fire('finish-select', this.data.get('result'));
    }
    
  },
  handleFinishSelect(res, item) {
    this.data.set('result', [item.label, ...res]);
    this.fire('finish-select', this.data.get('result'));
    console.log(this.data.get('result'));
  }
};
</script>

<style>
  .san-recursive-item {
    position: relative;
    padding-left: 5px;
    list-style: none;
    cursor: pointer;
  }
  .san-recursive-item.more::after {
    content: ">";
    position: absolute;
    right: 16px;
    display: inline-block;
    line-height: 24px;
  }
  .san-recursive-item:hover {
    background: #ccc;
  }
  .san-recursive-list {
    padding-left: 0;
    width: 100px;
    border: 1px solid #ccc;
  }

  .position {
    position: absolute;
    left: 100%;
    top: 0;
    visibility: hidden;
  }
  .open {
    visibility: visible;
  }

  .active {
    background: #20a0ff !important;
  }
</style>
